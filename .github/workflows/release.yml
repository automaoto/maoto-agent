name: Publish Python 🐍 distribution 📦

on: push

jobs:
  build-pypi:
    name: Build pypi distribution 📦
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          persist-credentials: false
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.x"
      - name: Install pypa/build
        run: >-
          python3 -m
          pip install
          build
          --user
      - name: Build a binary wheel and a source tarball
        run: python3 -m build --sdist --wheel
      - name: Store the distribution packages
        uses: actions/upload-artifact@v4
        with:
          name: python-package-distributions-pypi
          path: dist/

  publish-to-pypi:
    name: >-
      Publish Python 🐍 distribution 📦 to PyPI
    if: startsWith(github.ref, 'refs/tags/')
    needs:
      - build-pypi
    runs-on: ubuntu-latest
    environment:
      name: release_pypi
      url: https://pypi.org/p/maoto-agent
    permissions:
      id-token: write
    steps:
      - name: Download all the dists
        uses: actions/download-artifact@v4
        with:
          name: python-package-distributions-pypi
          path: dist/
      - name: Publish distribution 📦 to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1

  prepare-conda-forge:
    name: Prepare conda-forge feedstock
    if: startsWith(github.ref, 'refs/tags/')
    needs:
      - publish-to-pypi  # We first publish to PyPI, then conda-forge can pull from there
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          persist-credentials: false
          fetch-depth: 0
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.x"
      
      - name: Create conda-forge PR
        run: |
          # Install required tools
          pip install grayskull
          
          # Generate conda-forge recipe from PyPI
          VERSION=${GITHUB_REF#refs/tags/}
          grayskull pypi maoto-agent -o conda-forge-recipe
          
          # Display generated recipe for debugging
          cat conda-forge-recipe/maoto-agent/meta.yaml
          
          # Store recipe for inspection
          mkdir -p conda-forge-output
          cp -r conda-forge-recipe conda-forge-output/
      
      - name: Upload conda-forge recipe
        uses: actions/upload-artifact@v4
        with:
          name: conda-forge-recipe
          path: conda-forge-output
      
      - name: Instructions for conda-forge submission
        run: |
          echo "================================================"
          echo "CONDA-FORGE SUBMISSION INSTRUCTIONS"
          echo "================================================"
          echo "To submit to conda-forge:"
          echo "1. Fork https://github.com/conda-forge/staged-recipes"
          echo "2. Create a new branch"
          echo "3. Copy the generated recipe to recipes/maoto-agent/"
          echo "4. Submit a PR to conda-forge/staged-recipes"
          echo ""
          echo "For subsequent releases, update the feedstock repo"
          echo "that will be created after initial submission"
          echo "================================================"

  github-release:
    name: >-
      Sign the Python 🐍 distribution 📦 with Sigstore
      and upload them to GitHub Release
    if: startsWith(github.ref, 'refs/tags/')
    needs:
      - publish-to-pypi
      - prepare-conda-forge
    runs-on: ubuntu-latest

    permissions:
      contents: write
      id-token: write

    steps:
      - uses: actions/checkout@v4
        with:
          persist-credentials: false

      - name: Download all the dists
        uses: actions/download-artifact@v4
        with:
          name: python-package-distributions-pypi
          path: dist/
      - name: Sign the dists with Sigstore
        uses: sigstore/gh-action-sigstore-python@v3.0.0
        with:
          inputs: >-
            ./dist/*.tar.gz
            ./dist/*.whl
      - name: Create GitHub Release
        env:
          GITHUB_TOKEN: ${{ github.token }}
        run: >-
          gh release create
          "$GITHUB_REF_NAME"
          --repo "$GITHUB_REPOSITORY"
          --generate-notes
      - name: Upload artifact signatures to GitHub Release
        env:
          GITHUB_TOKEN: ${{ github.token }}
        run: >-
          gh release upload
          "$GITHUB_REF_NAME" dist/**
          --repo "$GITHUB_REPOSITORY"