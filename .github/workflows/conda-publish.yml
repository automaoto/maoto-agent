name: Build and Publish Conda Package

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  prerelease_check:
    runs-on: ubuntu-latest
    outputs:
      is_prerelease: ${{ steps.prerelease.outputs.is_prerelease }}
    steps:
      - name: Determine if it's a pre-release
        id: prerelease
        run: |
          if [[ "${GITHUB_REF#refs/tags/}" =~ [a] ]]; then
            echo "is_prerelease=true" >> $GITHUB_OUTPUT
          else
            echo "is_prerelease=false" >> $GITHUB_OUTPUT
          fi

  build_conda_package:
    needs: prerelease_check
    if: needs.prerelease_check.outputs.is_prerelease == 'false'
    runs-on: ubuntu-latest
    outputs:
      artifact_path: ${{ steps.build.outputs.artifact_path }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Miniconda
        uses: conda-incubator/setup-miniconda@v2
        with:
          auto-update-conda: true
          python-version: '3.10'
        env:
          CONDA_PKGS_DIR: /home/runner/conda_pkgs_dir

      - name: Install setuptools_scm
        run: |
          python -m pip install --upgrade pip setuptools setuptools_scm

      - name: Compute Version with setuptools_scm
        id: compute-version
        run: |
          VERSION=$(python -m setuptools_scm)
          echo "VERSION=$VERSION" >> $GITHUB_ENV

      - name: Update meta.yaml with Version
        run: |
          sed -i "s/^  version:.*/  version: \"$VERSION\"/" meta.yaml

      - name: Install Conda build tools
        run: |
          conda install -y conda-build anaconda-client

      - name: Build Conda package
        id: build
        run: |
          artifact_path=$(conda build . -c conda-forge --output)
          conda build . -c conda-forge
          echo "artifact_path=${artifact_path}" >> $GITHUB_OUTPUT

      - name: Upload Conda build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: conda-packages
          path: ${{ steps.build.outputs.artifact_path }}

  deploy:
    needs: [prerelease_check, build_conda_package]
    if: needs.prerelease_check.outputs.is_prerelease == 'false'
    runs-on: ubuntu-latest
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v3
        with:
          path: conda-bld

      - uses: actions/checkout@v2

      - name: Set up Miniconda
        uses: conda-incubator/setup-miniconda@v2
        with:
          auto-activate-base: true

      - name: Install anaconda-client
        run: conda install -y anaconda-client

      - name: Use anaconda command
        run: conda run -n base anaconda --help

      - name: Publish to Conda or Test Channel
        run: |
          # Extract filename from the artifact path
          artifact_filename=$(basename "${{ needs.build_conda_package.outputs.artifact_path }}")
          echo "artifact_filename=$artifact_filename"
          
          # Construct the path using $GITHUB_WORKSPACE
          artifact_path="$GITHUB_WORKSPACE/conda-bld/conda-packages/$artifact_filename"
          echo "artifact_path=$artifact_path"

          # Debug: list files
          ls -al $GITHUB_WORKSPACE

          if [ -f "$artifact_path" ]; then
            if [[ "${GITHUB_REF#refs/tags/}" =~ [brc] ]]; then
              echo "Uploading to Test Conda Channel..."
              conda run -n base anaconda upload --label beta "$artifact_path"
            else
              echo "Uploading to Production Conda Channel..."
              conda run -n base anaconda upload "$artifact_path"
            fi
          else
            echo "Artifact not found: $artifact_path"
            exit 1
          fi
