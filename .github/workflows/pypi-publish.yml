name: Build and Publish Pypi Package

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  build_wheels:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: ["3.10", "3.11", "3.12"]

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install cibuildwheel
        run: |
          python -m pip install wheel cibuildwheel

      - name: Build wheels
        run: python -m pip wheel . --no-deps --wheel-dir ./wheelhouse # run: cibuildwheel --output-dir wheelhouse
        env:
          CIBW_SKIP: "*-win32"

      - name: Upload wheels
        uses: actions/upload-artifact@v3
        with:
          name: python-wheels-${{ matrix.os }}-${{ matrix.python-version }}
          path: ./wheelhouse/

  deploy:
    runs-on: ubuntu-latest
    environment: release_pypi
    needs: build_wheels
    steps:
      - name: Determine if it's a pre-release
        id: prerelease-check
        run: |
          if [[ "${GITHUB_REF#refs/tags/}" =~ a ]]; then
            echo "alpha_version=true" >> $GITHUB_ENV
          elif [[ "${GITHUB_REF#refs/tags/}" =~ [brc] ]]; then
            echo "beta_version=true" >> $GITHUB_ENV
          else
            echo "beta_version=false" >> $GITHUB_ENV
          fi

      - name: Skip alpha release
        if: env.alpha_version == 'true'
        run: |
          echo "This is an alpha version. Skipping publish."
          exit 0

      - name: Download all artifacts
        uses: actions/download-artifact@v3
        with:
          path: wheelhouse

      - name: Print content of wheelhouse
        run: |
          ls -l wheelhouse

      - name: Publish to PyPI or Test PyPI
        if: env.alpha_version != 'true'
        env:
          TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
          TWINE_PASSWORD_TEST: ${{ secrets.PYPI_PASSWORD_TEST }}
        run: |
          if [ "${{ env.beta_version }}" = "true" ]; then
            echo "Uploading to Test PyPI..."
            python -m twine upload --repository-url https://test.pypi.org/legacy/ wheelhouse/* -u __token__ -p $TWINE_PASSWORD_TEST
          else
            echo "Uploading to PyPI..."
            python -m twine upload wheelhouse/* -u __token__ -p $TWINE_PASSWORD
          fi
